// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  NIC         String   @unique
  phoneNumber Int
  password    String
  otp         String?
  userImg     String?
  pin         Int?     @unique

  cards       Card[]
  wallets     Wallet[]
  payments    Pay[]
  others      Others[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Card {
  id              Int     @id @default(autoincrement())
  userId          Int
  paymentMethodId String?
  cardNumber      String?
  expireData      String?
  holderName      String?

  user            User    @relation(fields: [userId], references: [id])
}

model Wallet {
  id          Int     @id @default(autoincrement())
  userId      Int
  balance     Float   @default(0)
  customerId  String  @unique

  user        User    @relation(fields: [userId], references: [id])
}

model Pay {
  id       Int      @id @default(autoincrement())
  userId   Int

  user     User     @relation(fields: [userId], references: [id])
  payments Payment[]

  @@map("pays") // optional: rename to match Mongo model name
}

model Payment {
  id              Int     @id @default(autoincrement())
  paymentIntentId String?
  type            String?
  amount          Float?
  created         Int?

  payId           Int
  pay             Pay     @relation(fields: [payId], references: [id])
}

model Others {
  id     Int     @id @default(autoincrement())
  userId Int
  user   User    @relation(fields: [userId], references: [id])

  users  OtherUser[]
}

model OtherUser {
  id     Int     @id @default(autoincrement())
  email  String
  img    String?
  name   String?
  userId String

  othersId Int
  others   Others  @relation(fields: [othersId], references: [id])
}
